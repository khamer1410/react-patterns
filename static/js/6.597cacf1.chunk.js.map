{"version":3,"sources":["pages/conditionalRendering/ConditionalRenderingPage.js"],"names":["firstComponent","secondComponent","ConditionalRenderingPage","state","isOpen","toggleState","_this","setState","prevState","this","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","Fragment","components_Buttons__WEBPACK_IMPORTED_MODULE_8__","onClick","ConditionalExample","heading","Closed","Open","StatusPresenter","withHOC","props","Component","_ref","children","FlexWrapper","styled","div","_templateObject","_ref2","view","role","aria-label","condition"],"mappings":"4WAsFaA,EAAgBC,EAlFRC,6MACnBC,MAAQ,CACNC,QAAQ,KAGVC,YAAc,WACZC,EAAKC,SAAS,SAAAC,GAAS,MAAK,CAC1BJ,QAASI,EAAUJ,mFAId,IACCA,EAAWK,KAAKN,MAAhBC,OAER,OACEM,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACEC,QAASN,KAAKJ,aADhB,gBAMFK,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAACI,EAAD,CAAoBC,QAAQ,gBACxBb,GACAM,EAAAC,EAAAC,cAACM,EAAD,MAEDd,GACCM,EAAAC,EAAAC,cAACO,EAAD,OAIJT,EAAAC,EAAAC,cAACI,EAAD,CAAoBC,QAAQ,oBACzBb,EAASM,EAAAC,EAAAC,cAACO,EAAD,MAAWT,EAAAC,EAAAC,cAACM,EAAD,OAGvBR,EAAAC,EAAAC,cAACI,EAAD,CAAoBC,QAAQ,sBAC1BP,EAAAC,EAAAC,cAACQ,EAAD,CAAiBhB,OAAQA,KAG3BM,EAAAC,EAAAC,cAACI,EAAD,CAAoBC,QAAQ,QACxB,SAACb,GACD,OAAOA,EAASM,EAAAC,EAAAC,cAACO,EAAD,MAAWT,EAAAC,EAAAC,cAACM,EAAD,MAD3B,CAECd,IAGLM,EAAAC,EAAAC,cAACI,EAAD,CAAoBC,QAAQ,OACzBI,EAAQjB,EAARiB,CAAgBZ,KAAKa,gBAjDsBC,aAwDhDP,EAAqB,SAAAQ,GAAA,IAAGP,EAAHO,EAAGP,QAASQ,EAAZD,EAAYC,SAAZ,OACzBf,EAAAC,EAAAC,cAACc,EAAD,KACEhB,EAAAC,EAAAC,cAAA,cAAMK,EAAN,KACCQ,IAICC,EAAcC,IAAOC,IAAVC,KAMXT,EAAkB,SAAAU,GAAgB,IAAb1B,EAAa0B,EAAb1B,OACrB2B,EAAO,KAIX,OAHI3B,IAAU2B,EAAOrB,EAAAC,EAAAC,cAACO,EAAD,OAChBf,IAAU2B,EAAOrB,EAAAC,EAAAC,cAACM,EAAD,OAEfa,GAIHZ,EAAO,kBAAMT,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMoB,KAAK,MAAMC,aAAW,SAA5B,gBAAH,UAAuDvB,EAAAC,EAAAC,cAAA,QAAMoB,KAAK,MAAMC,aAAW,SAA5B,kBAEpEf,EAAS,kBAAMR,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMoB,KAAK,MAAMC,aAAW,cAA5B,gBAAH,UAA4DvB,EAAAC,EAAAC,cAAA,QAAMoB,KAAK,MAAMC,aAAW,cAA5B,kBAM3EZ,GAJOrB,EAIOmB,EAJSlB,EAIHiB,EAJuB,SAAAgB,GAAS,OAAI,SAAAZ,GAC5D,OAAOY,EAAYlC,EAAesB,GAASrB,EAAgBqB","file":"static/js/6.597cacf1.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport { Button } from 'components/Buttons'\n\nexport default class ConditionalRenderingPage extends Component {\n  state = {\n    isOpen: false,\n  }\n\n  toggleState = () => {\n    this.setState(prevState => ({\n      isOpen: !prevState.isOpen\n    }))\n  }\n\n  render() {\n    const { isOpen } = this.state\n\n    return (\n      <>\n        <div>\n          <Button\n            onClick={this.toggleState}\n          >\n            Toggle mood\n          </Button>\n        </div>\n        <hr />\n\n        <ConditionalExample heading='&& operator'>\n          {!isOpen && (\n            <Closed />\n          )}\n          {isOpen && (\n            <Open />\n          )}\n        </ConditionalExample>\n\n        <ConditionalExample heading='Ternary operator'>\n          {isOpen ? <Open /> : <Closed />}\n        </ConditionalExample>\n\n        <ConditionalExample heading='separate component'>\n          <StatusPresenter isOpen={isOpen} />\n        </ConditionalExample>\n\n        <ConditionalExample heading='IIFE'>\n          {((isOpen) => {\n            return isOpen ? <Open /> : <Closed />\n          })(isOpen)}\n        </ConditionalExample>\n\n        <ConditionalExample heading='HOC'>\n          {withHOC(isOpen)(this.props)}\n        </ConditionalExample>\n      </>\n    )\n  }\n}\n\nconst ConditionalExample = ({ heading, children }) => (\n  <FlexWrapper>\n    <h2> {heading} </h2>\n    {children}\n  </FlexWrapper>\n)\n\nconst FlexWrapper = styled.div`\n  padding: 0 25px;\n  display: flex;\n  justify-content: space-between;\n`\n\nconst StatusPresenter = ({ isOpen }) => {\n  let view = null;\n  if (isOpen) { view = <Open /> }\n  if (!isOpen) { view = <Closed /> }\n\n  return view\n}\n\n// HOC boilerplate\nconst Open = () => <p><span role='img' aria-label='devil'>ðŸ˜ˆ</span> PARTY <span role='img' aria-label='devil'>ðŸ˜ˆ</span></p>\n\nconst Closed = () => <p><span role='img' aria-label='sunglasses'>ðŸ˜Ž</span> CHILL <span role='img' aria-label='sunglasses'>ðŸ˜Ž</span></p>\n\nconst HOC = (firstComponent, secondComponent) => condition => props => {\n  return condition ? firstComponent(props) : secondComponent(props)\n}\n\nconst withHOC = HOC(Open, Closed)\n"],"sourceRoot":""}